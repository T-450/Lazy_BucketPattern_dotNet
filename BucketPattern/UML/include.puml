@startuml
interface IRepoBucket {
}
IRepoBucket --> "Repo1" IRepository1
IRepoBucket --> "Repo2" IRepository2
IRepoBucket --> "Repo3" IRepository3
IRepoBucket --> "Repo4" IRepository4
IRepoBucket --> "Repo5" IRepository5
IRepoBucket --> "Repo6" IRepository6
class RepoBucket {
    + RepoBucket(serviceProvider:IServiceProvider)
    + Deconstruct(lazyRepo1:Lazy<IRepository1>, lazyRepo2:Lazy<IRepository2>, lazyRepo3:Lazy<IRepository3>, lazyRepo4:Lazy<IRepository4>, lazyRepo5:Lazy<IRepository5>, lazyRepo6:Lazy<IRepository6>) : void
}
IRepoBucket <|-- RepoBucket
RepoBucket --> "Repo1" IRepository1
RepoBucket --> "Repo2" IRepository2
RepoBucket --> "Repo3" IRepository3
RepoBucket --> "Repo4" IRepository4
RepoBucket --> "Repo5" IRepository5
RepoBucket --> "Repo6" IRepository6
class Service {
    + Service(repoBucket:IRepoBucket)
    + MethodAsync() : Task<string>
}
IService <|-- Service
interface IRepository1 {
    GetInfo() : string
}
interface IRepository2 {
    GetInfo() : string
}
interface IRepository3 {
    GetInfo() : string
}
interface IRepository4 {
    GetInfo() : string
}
interface IRepository5 {
    GetInfo() : string
}
interface IRepository6 {
    GetInfo() : string
}
interface IService {
    MethodAsync() : Task<string>
}
@enduml
